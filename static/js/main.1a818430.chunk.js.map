{"version":3,"sources":["context.js","components/contacts/Contacts.js","components/contacts/Contact.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","About.js","pages/Notfound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contacts","Fragment","className","key","Contact","showContactInfo","onDeleteClick","a","delete","style","cursor","name","onClick","bind","float","color","to","marginRight","email","phone","Header","href","protoTypes","branding","PropTypes","object","isRequired","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmits","e","preventDefault","newContact","post","history","push","console","log","target","onSubmit","Abouts","Notfound","Test","todos","fetch","then","response","json","todo","title","EditContact","updateContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1a818430.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id != action.payload\r\n        ),\r\n      };\r\n\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n\r\n      case \"UPDATE_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact),\r\n        };\r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  // componentDidMount() {\r\n  //   axios\r\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then((res) => this.setState({ contacts: res.data }));\r\n  // }\r\n async componentDidMount() {\r\n     const res = await axios\r\n      .get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n      this.setState({contacts: res.data})\r\n  }\r\n  state = {\r\n    contacts: [\r\n      // {\r\n      //   id: \"1\",\r\n      //   name: \"Bishworaj Poudel\",\r\n      //   email: \"iambrp.tech@gmail.com\",\r\n      //   phone: \"283383\",\r\n      // },\r\n      // {\r\n      //   id: \"2\",\r\n      //   name: \"Menuka Poudel\",\r\n      //   email: \"iambrp.tech@gmail.com\",\r\n      //   phone: \"283383\",\r\n      // },\r\n      // {\r\n      //   id: \"3\",\r\n      //   name: \"Rahul Poudel\",\r\n      //   email: \"iambrp.tech@gmail.com\",\r\n      //   phone: \"283383\",\r\n      // },\r\n      // {\r\n      //   id: \"4\",\r\n      //   name: \"Bimal Poudel\",\r\n      //   email: \"iambrp.tech@gmail.com\",\r\n      //   phone: \"283383\",\r\n      // },\r\n    ],\r\n\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from '../../context'\r\n\r\nclass Contacts extends Component {\r\n \r\n  // deleteContact= (id) =>{\r\n  //   const {contacts} = this.state;\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id)\r\n  //   console.log(id)\r\n\r\n  //   this.setState({\r\n  //     contacts: newContacts\r\n  //   })\r\n  // }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Consumer>\r\n          {value => {\r\n            const { contacts } = value;\r\n            return (\r\n              <React.Fragment>\r\n                <h1 className=\"display-4 mb-2\">\r\n              <span className=\"text-danger\">\r\n                Contact\r\n              </span> List\r\n                </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                 contact = {contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n            )\r\n          }}\r\n      </Consumer>\r\n    )\r\n\r\n    \r\n   \r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\nimport Contacts from \"./Contacts\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nexport class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  // onDeleteClick = (id, dispatch) => {\r\n\r\n  //   console.log(\"Clicked\");\r\n  //   axios\r\n  //     .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  // };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n try {\r\n  await axios\r\n     .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n     \r\n     dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n\r\n } catch (error) {\r\n  dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n }\r\n  };\r\n  render() {\r\n    const { contact } = this.props;\r\n\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb3\" style={{ cursor: \"pointer\" }}>\r\n              <h4>\r\n                {contact.name}{\" \"}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    });\r\n                  }}\r\n                  className=\"fa fa-sort-down fa-lg\"\r\n                ></i>\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                  className=\"fa fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n\r\n                <Link to ={`contact/edit/${contact.id}`}>\r\n                  <i className=\"fa fa-pencil\" style={{\r\n                    cursor : 'pointer',\r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'\r\n                  }}>\r\n                    \r\n                  </i>\r\n                </Link>\r\n                \r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{contact.email}</li>\r\n                  <li className=\"list-group-item\">{contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  //   deleteClickHandler: PropTypes.func.isRequired\r\n};\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Header = ({ name }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {name}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n\r\n              <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fa fa-home\"></i>\r\n              \r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fa fa-plus\"></i>\r\n               \r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fa fa-question\"></i>\r\n              \r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.protoTypes = {\r\n  branding: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  id,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name} className=\"htmlFor\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg',{\r\n            'is-invalid': error\r\n        })}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">This is incorrect</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// TextInputGroup.propTypes ={\r\n//     name: PropTypes.string.isRequired,\r\n//     placeholder:  PropTypes.string.isRequired,\r\n//     label:  PropTypes.string.isRequired,\r\n//     value:  PropTypes.string.isRequired,\r\n//     type:  PropTypes.string.isRequired,\r\n//     onChange:  PropTypes.func.isRequired,\r\n// }\r\n\r\n// TextInputGroup.defaultProps = {\r\n//     type: 'text'\r\n// }\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport uuid from 'uuid'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from \"axios\";\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        id: '',\r\n        name : '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    }\r\n\r\n    onSubmits = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        const{name, email, phone } = this.state;\r\n\r\n        // Check For Error\r\n        if(name === \"\"){\r\n            this.setState({errors: {name: \"Name is required\"}})\r\n            return;\r\n        }else  if(phone === \"\"){\r\n            this.setState({errors: {phone: \"Phone is required\"}})\r\n            return;\r\n        }else  if(email === \"\"){\r\n            this.setState({errors: {email: \"Email is required\"}})\r\n            return;\r\n        }\r\n        const newContact = {\r\n            email,\r\n            name,\r\n            phone,\r\n        }\r\n\r\n        // axios.post('https://jsonplaceholder.typicode.com/users', newContact).then(\r\n        //     res=> dispatch({type: 'ADD_CONTACT', payload:newContact})\r\n\r\n        // )\r\n\r\n       const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n       dispatch({type: 'ADD_CONTACT', payload:res.data})\r\n\r\n        \r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone:'',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        console.log(this.state)\r\n    }\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value})\r\n    \r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mg-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit = {this.onSubmits.bind(this, dispatch)}>\r\n                                   <TextInputGroup\r\n                                    label =\"Name\"\r\n                                    name =\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value = {name}\r\n                                    type = \"text\"\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.name}\r\n                                   />\r\n                                          {/* For Phone */}\r\n                                          <TextInputGroup\r\n                                    label =\"Phone\"\r\n                                    name =\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    type= \"number\"\r\n                                    value = {phone}\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.phone}\r\n\r\n                                   />\r\n                                        {/* For Email */}\r\n                                        <TextInputGroup\r\n                                    label =\"email\"\r\n                                    name =\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    type= \"email\"\r\n                                    value = {email}\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.email}\r\n\r\n                                   />\r\n                                  \r\n                                    <input type=\"submit\" value=\"Add Contact\" name=\"submit\" className=\"btn btn-danger btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                            \r\n            \r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport default AddContact\r\n","import React from 'react'\r\n\r\nconst  Abouts= ()=> {\r\n    return (\r\n        <div>\r\n            <h1 className = 'display-4'>About Bishworaj Poudel</h1>\r\n            <p className=\"lead\">\r\n                Simple app that helps to manage the contact.\r\n            </p>\r\n            <p className=\"text-secondary\">\r\n                Version: 1.0.0\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Abouts;\r\n","import React from 'react'\r\n\r\nconst  Notfound=() => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                404 Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">\r\n                Sorry that page does not found.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notfound\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    // titlesdata;\r\n\r\n\r\n    state  = {\r\n        todos: []\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/todos')\r\n        .then(response => response.json())\r\n        .then(todos => this.setState({\r\n            todos: todos\r\n        }));\r\n        \r\n    }\r\n\r\n\r\n    // componentWillMount(){\r\n    //     console.log('Component will Mount')\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('Component did Update')\r\n    // }\r\n    // componentWillUpdate(){\r\n    //     console.log('Component will Update')\r\n\r\n    // }\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillReceiveProps')\r\n\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(nextProps, prevState){\r\n    //     return null;\r\n    // }\r\n    // getSnapshotBeforeUpdate(prevProp, peevState){\r\n    //     console.log('Get Snapshot Before Update')\r\n    // }\r\n\r\n    render() {\r\n        const{todos} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    todos.map((todo, id) => <li>{id+1}. {todo.title}</li>)\r\n                }\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context'\r\nimport uuid from 'uuid'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from \"axios\";\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        id: '',\r\n        name : '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n        console.log(res.data);\r\n        this.setState({\r\n            name: contact.name,\r\n            phone: contact.phone,\r\n            email: contact.email\r\n        })\r\n    }\r\n\r\n    onSubmits = async(dispatch, e) => {\r\n        e.preventDefault();\r\n        const{name, email, phone } = this.state;\r\n\r\n        // Check For Error\r\n        if(name === \"\"){\r\n            this.setState({errors: {name: \"Name is required\"}})\r\n            return;\r\n        }else  if(phone === \"\"){\r\n            this.setState({errors: {phone: \"Phone is required\"}})\r\n            return;\r\n        }else  if(email === \"\"){\r\n            this.setState({errors: {email: \"Email is required\"}})\r\n            return;\r\n        }\r\n\r\n        const updateContact={\r\n            name,\r\n            email,\r\n            phone,\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n        dispatch({type:\"UPDATE_CONTACT\", payload: res.data})\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone:'',\r\n            errors: {}\r\n        });\r\n\r\n\r\n\r\n       \r\n\r\n        this.props.history.push('/');\r\n        console.log(this.state)\r\n    }\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value})\r\n    \r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card mg-3\">\r\n                            <div className=\"card-header\">\r\n                               Edit Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit = {this.onSubmits.bind(this, dispatch)}>\r\n                                   <TextInputGroup\r\n                                    label =\"Name\"\r\n                                    name =\"name\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value = {name}\r\n                                    type = \"text\"\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.name}\r\n                                   />\r\n                                          {/* For Phone */}\r\n                                          <TextInputGroup\r\n                                    label =\"Phone\"\r\n                                    name =\"phone\"\r\n                                    placeholder=\"Enter Phone\"\r\n                                    type= \"text\"\r\n                                    value = {phone}\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.phone}\r\n\r\n                                   />\r\n                                        {/* For Email */}\r\n                                        <TextInputGroup\r\n                                    label =\"email\"\r\n                                    name =\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    type= \"email\"\r\n                                    value = {email}\r\n                                    onChange={this.onChange}\r\n                                    error ={errors.email}\r\n\r\n                                   />\r\n                                  \r\n                                    <input type=\"submit\" value=\"Update Contact\" name=\"submit\" className=\"btn btn-danger btn-block\"/>\r\n                                </form>\r\n                            </div>\r\n                            \r\n            \r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n       \r\n    }\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react';\nimport './App.css';\nimport Contact from './components/contacts/Contact';\nimport Header from './components/layout/Header';\nimport {Provider} from './context'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from './components/contacts/Contacts';\nimport './components/contacts/AddContact'\nimport AddContact from './components/contacts/AddContact';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\nimport Abouts from './About';\nimport Notfound from './pages/Notfound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n   <Router>\n   <div className=\"App\">\n     <Header name=\"Bishworaj\"/>\n    <div className=\"container\">\n      <Switch>\n        <Route exact path=\"/\" component = {Contacts}/>\n        <Route exact path=\"/contact/add\" component = {AddContact}/>\n        <Route exact path=\"/about\" component = {Abouts}/>\n        <Route exact path=\"/test\" component = {Test}/>\n        <Route exact path=\"/contact/edit/:id\" component = {EditContact}/>\n        <Route component ={Notfound}/>   \n        \n      </Switch>\n    </div>\n    </div>\n   </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}